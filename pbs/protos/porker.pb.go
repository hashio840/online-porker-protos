// Code generated by protoc-gen-go. DO NOT EDIT.
// source: protos/porker.proto

package porker

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Card_Mark int32

const (
	Card_MARK_CLUB    Card_Mark = 0
	Card_MARK_DIAMOND Card_Mark = 1
	Card_MARK_HEART   Card_Mark = 2
	Card_MARK_SPADE   Card_Mark = 3
)

var Card_Mark_name = map[int32]string{
	0: "MARK_CLUB",
	1: "MARK_DIAMOND",
	2: "MARK_HEART",
	3: "MARK_SPADE",
}

var Card_Mark_value = map[string]int32{
	"MARK_CLUB":    0,
	"MARK_DIAMOND": 1,
	"MARK_HEART":   2,
	"MARK_SPADE":   3,
}

func (x Card_Mark) String() string {
	return proto.EnumName(Card_Mark_name, int32(x))
}

func (Card_Mark) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_a72323cf8b750cee, []int{11, 0}
}

type PlayerResult_HAND int32

const (
	PlayerResult_HAND_HIGH           PlayerResult_HAND = 0
	PlayerResult_HAND_PAIR           PlayerResult_HAND = 1
	PlayerResult_HAND_TWO_PAIR       PlayerResult_HAND = 2
	PlayerResult_HAND_THREE          PlayerResult_HAND = 3
	PlayerResult_HAND_STRAIGHT       PlayerResult_HAND = 4
	PlayerResult_HAND_FLUSH          PlayerResult_HAND = 5
	PlayerResult_HAND_FULL_HOUSE     PlayerResult_HAND = 6
	PlayerResult_HAND_FOUR           PlayerResult_HAND = 7
	PlayerResult_HAND_STRAIGHT_FLUSH PlayerResult_HAND = 8
)

var PlayerResult_HAND_name = map[int32]string{
	0: "HAND_HIGH",
	1: "HAND_PAIR",
	2: "HAND_TWO_PAIR",
	3: "HAND_THREE",
	4: "HAND_STRAIGHT",
	5: "HAND_FLUSH",
	6: "HAND_FULL_HOUSE",
	7: "HAND_FOUR",
	8: "HAND_STRAIGHT_FLUSH",
}

var PlayerResult_HAND_value = map[string]int32{
	"HAND_HIGH":           0,
	"HAND_PAIR":           1,
	"HAND_TWO_PAIR":       2,
	"HAND_THREE":          3,
	"HAND_STRAIGHT":       4,
	"HAND_FLUSH":          5,
	"HAND_FULL_HOUSE":     6,
	"HAND_FOUR":           7,
	"HAND_STRAIGHT_FLUSH": 8,
}

func (x PlayerResult_HAND) String() string {
	return proto.EnumName(PlayerResult_HAND_name, int32(x))
}

func (PlayerResult_HAND) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_a72323cf8b750cee, []int{18, 0}
}

type SignUpRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SignUpRequest) Reset()         { *m = SignUpRequest{} }
func (m *SignUpRequest) String() string { return proto.CompactTextString(m) }
func (*SignUpRequest) ProtoMessage()    {}
func (*SignUpRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a72323cf8b750cee, []int{0}
}

func (m *SignUpRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SignUpRequest.Unmarshal(m, b)
}
func (m *SignUpRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SignUpRequest.Marshal(b, m, deterministic)
}
func (m *SignUpRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignUpRequest.Merge(m, src)
}
func (m *SignUpRequest) XXX_Size() int {
	return xxx_messageInfo_SignUpRequest.Size(m)
}
func (m *SignUpRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SignUpRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SignUpRequest proto.InternalMessageInfo

func (m *SignUpRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type SignUpResponse struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SignUpResponse) Reset()         { *m = SignUpResponse{} }
func (m *SignUpResponse) String() string { return proto.CompactTextString(m) }
func (*SignUpResponse) ProtoMessage()    {}
func (*SignUpResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a72323cf8b750cee, []int{1}
}

func (m *SignUpResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SignUpResponse.Unmarshal(m, b)
}
func (m *SignUpResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SignUpResponse.Marshal(b, m, deterministic)
}
func (m *SignUpResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignUpResponse.Merge(m, src)
}
func (m *SignUpResponse) XXX_Size() int {
	return xxx_messageInfo_SignUpResponse.Size(m)
}
func (m *SignUpResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SignUpResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SignUpResponse proto.InternalMessageInfo

func (m *SignUpResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *SignUpResponse) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type ChangeNameRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChangeNameRequest) Reset()         { *m = ChangeNameRequest{} }
func (m *ChangeNameRequest) String() string { return proto.CompactTextString(m) }
func (*ChangeNameRequest) ProtoMessage()    {}
func (*ChangeNameRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a72323cf8b750cee, []int{2}
}

func (m *ChangeNameRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChangeNameRequest.Unmarshal(m, b)
}
func (m *ChangeNameRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChangeNameRequest.Marshal(b, m, deterministic)
}
func (m *ChangeNameRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChangeNameRequest.Merge(m, src)
}
func (m *ChangeNameRequest) XXX_Size() int {
	return xxx_messageInfo_ChangeNameRequest.Size(m)
}
func (m *ChangeNameRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ChangeNameRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ChangeNameRequest proto.InternalMessageInfo

func (m *ChangeNameRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ChangeNameRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type ChangeNameResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChangeNameResponse) Reset()         { *m = ChangeNameResponse{} }
func (m *ChangeNameResponse) String() string { return proto.CompactTextString(m) }
func (*ChangeNameResponse) ProtoMessage()    {}
func (*ChangeNameResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a72323cf8b750cee, []int{3}
}

func (m *ChangeNameResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChangeNameResponse.Unmarshal(m, b)
}
func (m *ChangeNameResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChangeNameResponse.Marshal(b, m, deterministic)
}
func (m *ChangeNameResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChangeNameResponse.Merge(m, src)
}
func (m *ChangeNameResponse) XXX_Size() int {
	return xxx_messageInfo_ChangeNameResponse.Size(m)
}
func (m *ChangeNameResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ChangeNameResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ChangeNameResponse proto.InternalMessageInfo

type SignInRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SignInRequest) Reset()         { *m = SignInRequest{} }
func (m *SignInRequest) String() string { return proto.CompactTextString(m) }
func (*SignInRequest) ProtoMessage()    {}
func (*SignInRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a72323cf8b750cee, []int{4}
}

func (m *SignInRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SignInRequest.Unmarshal(m, b)
}
func (m *SignInRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SignInRequest.Marshal(b, m, deterministic)
}
func (m *SignInRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignInRequest.Merge(m, src)
}
func (m *SignInRequest) XXX_Size() int {
	return xxx_messageInfo_SignInRequest.Size(m)
}
func (m *SignInRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SignInRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SignInRequest proto.InternalMessageInfo

func (m *SignInRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type SignInResponse struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SignInResponse) Reset()         { *m = SignInResponse{} }
func (m *SignInResponse) String() string { return proto.CompactTextString(m) }
func (*SignInResponse) ProtoMessage()    {}
func (*SignInResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a72323cf8b750cee, []int{5}
}

func (m *SignInResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SignInResponse.Unmarshal(m, b)
}
func (m *SignInResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SignInResponse.Marshal(b, m, deterministic)
}
func (m *SignInResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignInResponse.Merge(m, src)
}
func (m *SignInResponse) XXX_Size() int {
	return xxx_messageInfo_SignInResponse.Size(m)
}
func (m *SignInResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SignInResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SignInResponse proto.InternalMessageInfo

func (m *SignInResponse) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *SignInResponse) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type JoinRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *JoinRequest) Reset()         { *m = JoinRequest{} }
func (m *JoinRequest) String() string { return proto.CompactTextString(m) }
func (*JoinRequest) ProtoMessage()    {}
func (*JoinRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a72323cf8b750cee, []int{6}
}

func (m *JoinRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JoinRequest.Unmarshal(m, b)
}
func (m *JoinRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JoinRequest.Marshal(b, m, deterministic)
}
func (m *JoinRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JoinRequest.Merge(m, src)
}
func (m *JoinRequest) XXX_Size() int {
	return xxx_messageInfo_JoinRequest.Size(m)
}
func (m *JoinRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_JoinRequest.DiscardUnknown(m)
}

var xxx_messageInfo_JoinRequest proto.InternalMessageInfo

type JoinResponse struct {
	RoomId               string    `protobuf:"bytes,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	RoomName             string    `protobuf:"bytes,2,opt,name=room_name,json=roomName,proto3" json:"room_name,omitempty"`
	PlayerTurn           int64     `protobuf:"varint,3,opt,name=player_turn,json=playerTurn,proto3" json:"player_turn,omitempty"`
	Players              []*Player `protobuf:"bytes,4,rep,name=players,proto3" json:"players,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *JoinResponse) Reset()         { *m = JoinResponse{} }
func (m *JoinResponse) String() string { return proto.CompactTextString(m) }
func (*JoinResponse) ProtoMessage()    {}
func (*JoinResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a72323cf8b750cee, []int{7}
}

func (m *JoinResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JoinResponse.Unmarshal(m, b)
}
func (m *JoinResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JoinResponse.Marshal(b, m, deterministic)
}
func (m *JoinResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JoinResponse.Merge(m, src)
}
func (m *JoinResponse) XXX_Size() int {
	return xxx_messageInfo_JoinResponse.Size(m)
}
func (m *JoinResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_JoinResponse.DiscardUnknown(m)
}

var xxx_messageInfo_JoinResponse proto.InternalMessageInfo

func (m *JoinResponse) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

func (m *JoinResponse) GetRoomName() string {
	if m != nil {
		return m.RoomName
	}
	return ""
}

func (m *JoinResponse) GetPlayerTurn() int64 {
	if m != nil {
		return m.PlayerTurn
	}
	return 0
}

func (m *JoinResponse) GetPlayers() []*Player {
	if m != nil {
		return m.Players
	}
	return nil
}

type Player struct {
	Turn                 int64    `protobuf:"varint,1,opt,name=turn,proto3" json:"turn,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Player) Reset()         { *m = Player{} }
func (m *Player) String() string { return proto.CompactTextString(m) }
func (*Player) ProtoMessage()    {}
func (*Player) Descriptor() ([]byte, []int) {
	return fileDescriptor_a72323cf8b750cee, []int{8}
}

func (m *Player) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Player.Unmarshal(m, b)
}
func (m *Player) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Player.Marshal(b, m, deterministic)
}
func (m *Player) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Player.Merge(m, src)
}
func (m *Player) XXX_Size() int {
	return xxx_messageInfo_Player.Size(m)
}
func (m *Player) XXX_DiscardUnknown() {
	xxx_messageInfo_Player.DiscardUnknown(m)
}

var xxx_messageInfo_Player proto.InternalMessageInfo

func (m *Player) GetTurn() int64 {
	if m != nil {
		return m.Turn
	}
	return 0
}

func (m *Player) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type StartRequest struct {
	RoomId               string   `protobuf:"bytes,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StartRequest) Reset()         { *m = StartRequest{} }
func (m *StartRequest) String() string { return proto.CompactTextString(m) }
func (*StartRequest) ProtoMessage()    {}
func (*StartRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a72323cf8b750cee, []int{9}
}

func (m *StartRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StartRequest.Unmarshal(m, b)
}
func (m *StartRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StartRequest.Marshal(b, m, deterministic)
}
func (m *StartRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StartRequest.Merge(m, src)
}
func (m *StartRequest) XXX_Size() int {
	return xxx_messageInfo_StartRequest.Size(m)
}
func (m *StartRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StartRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StartRequest proto.InternalMessageInfo

func (m *StartRequest) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

type StartResponse struct {
	Turn                 int64    `protobuf:"varint,1,opt,name=turn,proto3" json:"turn,omitempty"`
	CardNumber           int64    `protobuf:"varint,2,opt,name=card_number,json=cardNumber,proto3" json:"card_number,omitempty"`
	Cards                []*Card  `protobuf:"bytes,3,rep,name=cards,proto3" json:"cards,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StartResponse) Reset()         { *m = StartResponse{} }
func (m *StartResponse) String() string { return proto.CompactTextString(m) }
func (*StartResponse) ProtoMessage()    {}
func (*StartResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a72323cf8b750cee, []int{10}
}

func (m *StartResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StartResponse.Unmarshal(m, b)
}
func (m *StartResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StartResponse.Marshal(b, m, deterministic)
}
func (m *StartResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StartResponse.Merge(m, src)
}
func (m *StartResponse) XXX_Size() int {
	return xxx_messageInfo_StartResponse.Size(m)
}
func (m *StartResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StartResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StartResponse proto.InternalMessageInfo

func (m *StartResponse) GetTurn() int64 {
	if m != nil {
		return m.Turn
	}
	return 0
}

func (m *StartResponse) GetCardNumber() int64 {
	if m != nil {
		return m.CardNumber
	}
	return 0
}

func (m *StartResponse) GetCards() []*Card {
	if m != nil {
		return m.Cards
	}
	return nil
}

type Card struct {
	Number               int64     `protobuf:"varint,1,opt,name=number,proto3" json:"number,omitempty"`
	Mark                 Card_Mark `protobuf:"varint,2,opt,name=mark,proto3,enum=porker.Card_Mark" json:"mark,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Card) Reset()         { *m = Card{} }
func (m *Card) String() string { return proto.CompactTextString(m) }
func (*Card) ProtoMessage()    {}
func (*Card) Descriptor() ([]byte, []int) {
	return fileDescriptor_a72323cf8b750cee, []int{11}
}

func (m *Card) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Card.Unmarshal(m, b)
}
func (m *Card) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Card.Marshal(b, m, deterministic)
}
func (m *Card) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Card.Merge(m, src)
}
func (m *Card) XXX_Size() int {
	return xxx_messageInfo_Card.Size(m)
}
func (m *Card) XXX_DiscardUnknown() {
	xxx_messageInfo_Card.DiscardUnknown(m)
}

var xxx_messageInfo_Card proto.InternalMessageInfo

func (m *Card) GetNumber() int64 {
	if m != nil {
		return m.Number
	}
	return 0
}

func (m *Card) GetMark() Card_Mark {
	if m != nil {
		return m.Mark
	}
	return Card_MARK_CLUB
}

type ChangeRequest struct {
	RoomId               string   `protobuf:"bytes,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	Cards                []*Card  `protobuf:"bytes,2,rep,name=cards,proto3" json:"cards,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChangeRequest) Reset()         { *m = ChangeRequest{} }
func (m *ChangeRequest) String() string { return proto.CompactTextString(m) }
func (*ChangeRequest) ProtoMessage()    {}
func (*ChangeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a72323cf8b750cee, []int{12}
}

func (m *ChangeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChangeRequest.Unmarshal(m, b)
}
func (m *ChangeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChangeRequest.Marshal(b, m, deterministic)
}
func (m *ChangeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChangeRequest.Merge(m, src)
}
func (m *ChangeRequest) XXX_Size() int {
	return xxx_messageInfo_ChangeRequest.Size(m)
}
func (m *ChangeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ChangeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ChangeRequest proto.InternalMessageInfo

func (m *ChangeRequest) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

func (m *ChangeRequest) GetCards() []*Card {
	if m != nil {
		return m.Cards
	}
	return nil
}

type ChangeResponse struct {
	Cards                []*Card  `protobuf:"bytes,1,rep,name=cards,proto3" json:"cards,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChangeResponse) Reset()         { *m = ChangeResponse{} }
func (m *ChangeResponse) String() string { return proto.CompactTextString(m) }
func (*ChangeResponse) ProtoMessage()    {}
func (*ChangeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a72323cf8b750cee, []int{13}
}

func (m *ChangeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChangeResponse.Unmarshal(m, b)
}
func (m *ChangeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChangeResponse.Marshal(b, m, deterministic)
}
func (m *ChangeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChangeResponse.Merge(m, src)
}
func (m *ChangeResponse) XXX_Size() int {
	return xxx_messageInfo_ChangeResponse.Size(m)
}
func (m *ChangeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ChangeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ChangeResponse proto.InternalMessageInfo

func (m *ChangeResponse) GetCards() []*Card {
	if m != nil {
		return m.Cards
	}
	return nil
}

type DrawRequest struct {
	RoomId               string   `protobuf:"bytes,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	Turn                 int64    `protobuf:"varint,2,opt,name=turn,proto3" json:"turn,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DrawRequest) Reset()         { *m = DrawRequest{} }
func (m *DrawRequest) String() string { return proto.CompactTextString(m) }
func (*DrawRequest) ProtoMessage()    {}
func (*DrawRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a72323cf8b750cee, []int{14}
}

func (m *DrawRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DrawRequest.Unmarshal(m, b)
}
func (m *DrawRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DrawRequest.Marshal(b, m, deterministic)
}
func (m *DrawRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DrawRequest.Merge(m, src)
}
func (m *DrawRequest) XXX_Size() int {
	return xxx_messageInfo_DrawRequest.Size(m)
}
func (m *DrawRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DrawRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DrawRequest proto.InternalMessageInfo

func (m *DrawRequest) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

func (m *DrawRequest) GetTurn() int64 {
	if m != nil {
		return m.Turn
	}
	return 0
}

type DrawResponse struct {
	Cards                []*Card  `protobuf:"bytes,1,rep,name=cards,proto3" json:"cards,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DrawResponse) Reset()         { *m = DrawResponse{} }
func (m *DrawResponse) String() string { return proto.CompactTextString(m) }
func (*DrawResponse) ProtoMessage()    {}
func (*DrawResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a72323cf8b750cee, []int{15}
}

func (m *DrawResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DrawResponse.Unmarshal(m, b)
}
func (m *DrawResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DrawResponse.Marshal(b, m, deterministic)
}
func (m *DrawResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DrawResponse.Merge(m, src)
}
func (m *DrawResponse) XXX_Size() int {
	return xxx_messageInfo_DrawResponse.Size(m)
}
func (m *DrawResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DrawResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DrawResponse proto.InternalMessageInfo

func (m *DrawResponse) GetCards() []*Card {
	if m != nil {
		return m.Cards
	}
	return nil
}

type OpenRequest struct {
	RoomId               string   `protobuf:"bytes,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OpenRequest) Reset()         { *m = OpenRequest{} }
func (m *OpenRequest) String() string { return proto.CompactTextString(m) }
func (*OpenRequest) ProtoMessage()    {}
func (*OpenRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a72323cf8b750cee, []int{16}
}

func (m *OpenRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OpenRequest.Unmarshal(m, b)
}
func (m *OpenRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OpenRequest.Marshal(b, m, deterministic)
}
func (m *OpenRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OpenRequest.Merge(m, src)
}
func (m *OpenRequest) XXX_Size() int {
	return xxx_messageInfo_OpenRequest.Size(m)
}
func (m *OpenRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_OpenRequest.DiscardUnknown(m)
}

var xxx_messageInfo_OpenRequest proto.InternalMessageInfo

func (m *OpenRequest) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

type OpenResponse struct {
	Pr                   []*PlayerResult `protobuf:"bytes,1,rep,name=pr,proto3" json:"pr,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *OpenResponse) Reset()         { *m = OpenResponse{} }
func (m *OpenResponse) String() string { return proto.CompactTextString(m) }
func (*OpenResponse) ProtoMessage()    {}
func (*OpenResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a72323cf8b750cee, []int{17}
}

func (m *OpenResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OpenResponse.Unmarshal(m, b)
}
func (m *OpenResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OpenResponse.Marshal(b, m, deterministic)
}
func (m *OpenResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OpenResponse.Merge(m, src)
}
func (m *OpenResponse) XXX_Size() int {
	return xxx_messageInfo_OpenResponse.Size(m)
}
func (m *OpenResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_OpenResponse.DiscardUnknown(m)
}

var xxx_messageInfo_OpenResponse proto.InternalMessageInfo

func (m *OpenResponse) GetPr() []*PlayerResult {
	if m != nil {
		return m.Pr
	}
	return nil
}

type PlayerResult struct {
	Turn                 int64             `protobuf:"varint,1,opt,name=turn,proto3" json:"turn,omitempty"`
	Cards                []*Card           `protobuf:"bytes,2,rep,name=cards,proto3" json:"cards,omitempty"`
	Hand                 PlayerResult_HAND `protobuf:"varint,3,opt,name=hand,proto3,enum=porker.PlayerResult_HAND" json:"hand,omitempty"`
	Rank                 int64             `protobuf:"varint,4,opt,name=rank,proto3" json:"rank,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *PlayerResult) Reset()         { *m = PlayerResult{} }
func (m *PlayerResult) String() string { return proto.CompactTextString(m) }
func (*PlayerResult) ProtoMessage()    {}
func (*PlayerResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_a72323cf8b750cee, []int{18}
}

func (m *PlayerResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlayerResult.Unmarshal(m, b)
}
func (m *PlayerResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlayerResult.Marshal(b, m, deterministic)
}
func (m *PlayerResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlayerResult.Merge(m, src)
}
func (m *PlayerResult) XXX_Size() int {
	return xxx_messageInfo_PlayerResult.Size(m)
}
func (m *PlayerResult) XXX_DiscardUnknown() {
	xxx_messageInfo_PlayerResult.DiscardUnknown(m)
}

var xxx_messageInfo_PlayerResult proto.InternalMessageInfo

func (m *PlayerResult) GetTurn() int64 {
	if m != nil {
		return m.Turn
	}
	return 0
}

func (m *PlayerResult) GetCards() []*Card {
	if m != nil {
		return m.Cards
	}
	return nil
}

func (m *PlayerResult) GetHand() PlayerResult_HAND {
	if m != nil {
		return m.Hand
	}
	return PlayerResult_HAND_HIGH
}

func (m *PlayerResult) GetRank() int64 {
	if m != nil {
		return m.Rank
	}
	return 0
}

type EndRequest struct {
	IsEnd                bool     `protobuf:"varint,1,opt,name=is_end,json=isEnd,proto3" json:"is_end,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EndRequest) Reset()         { *m = EndRequest{} }
func (m *EndRequest) String() string { return proto.CompactTextString(m) }
func (*EndRequest) ProtoMessage()    {}
func (*EndRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a72323cf8b750cee, []int{19}
}

func (m *EndRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EndRequest.Unmarshal(m, b)
}
func (m *EndRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EndRequest.Marshal(b, m, deterministic)
}
func (m *EndRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EndRequest.Merge(m, src)
}
func (m *EndRequest) XXX_Size() int {
	return xxx_messageInfo_EndRequest.Size(m)
}
func (m *EndRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EndRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EndRequest proto.InternalMessageInfo

func (m *EndRequest) GetIsEnd() bool {
	if m != nil {
		return m.IsEnd
	}
	return false
}

type EndResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EndResponse) Reset()         { *m = EndResponse{} }
func (m *EndResponse) String() string { return proto.CompactTextString(m) }
func (*EndResponse) ProtoMessage()    {}
func (*EndResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a72323cf8b750cee, []int{20}
}

func (m *EndResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EndResponse.Unmarshal(m, b)
}
func (m *EndResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EndResponse.Marshal(b, m, deterministic)
}
func (m *EndResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EndResponse.Merge(m, src)
}
func (m *EndResponse) XXX_Size() int {
	return xxx_messageInfo_EndResponse.Size(m)
}
func (m *EndResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_EndResponse.DiscardUnknown(m)
}

var xxx_messageInfo_EndResponse proto.InternalMessageInfo

func init() {
	proto.RegisterEnum("porker.Card_Mark", Card_Mark_name, Card_Mark_value)
	proto.RegisterEnum("porker.PlayerResult_HAND", PlayerResult_HAND_name, PlayerResult_HAND_value)
	proto.RegisterType((*SignUpRequest)(nil), "porker.SignUpRequest")
	proto.RegisterType((*SignUpResponse)(nil), "porker.SignUpResponse")
	proto.RegisterType((*ChangeNameRequest)(nil), "porker.ChangeNameRequest")
	proto.RegisterType((*ChangeNameResponse)(nil), "porker.ChangeNameResponse")
	proto.RegisterType((*SignInRequest)(nil), "porker.SignInRequest")
	proto.RegisterType((*SignInResponse)(nil), "porker.SignInResponse")
	proto.RegisterType((*JoinRequest)(nil), "porker.JoinRequest")
	proto.RegisterType((*JoinResponse)(nil), "porker.JoinResponse")
	proto.RegisterType((*Player)(nil), "porker.Player")
	proto.RegisterType((*StartRequest)(nil), "porker.StartRequest")
	proto.RegisterType((*StartResponse)(nil), "porker.StartResponse")
	proto.RegisterType((*Card)(nil), "porker.Card")
	proto.RegisterType((*ChangeRequest)(nil), "porker.ChangeRequest")
	proto.RegisterType((*ChangeResponse)(nil), "porker.ChangeResponse")
	proto.RegisterType((*DrawRequest)(nil), "porker.DrawRequest")
	proto.RegisterType((*DrawResponse)(nil), "porker.DrawResponse")
	proto.RegisterType((*OpenRequest)(nil), "porker.OpenRequest")
	proto.RegisterType((*OpenResponse)(nil), "porker.OpenResponse")
	proto.RegisterType((*PlayerResult)(nil), "porker.PlayerResult")
	proto.RegisterType((*EndRequest)(nil), "porker.EndRequest")
	proto.RegisterType((*EndResponse)(nil), "porker.EndResponse")
}

func init() { proto.RegisterFile("protos/porker.proto", fileDescriptor_a72323cf8b750cee) }

var fileDescriptor_a72323cf8b750cee = []byte{
	// 820 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x55, 0xdb, 0x6e, 0xea, 0x46,
	0x14, 0xc5, 0x17, 0x9c, 0x64, 0x03, 0xae, 0x33, 0x24, 0xe7, 0x50, 0xfa, 0x90, 0x68, 0x4e, 0x2f,
	0xbc, 0x94, 0x46, 0x24, 0x4a, 0xd5, 0xbe, 0x91, 0xe0, 0xc4, 0xb4, 0x04, 0xd0, 0x00, 0xea, 0x23,
	0x72, 0x62, 0x2b, 0x41, 0x04, 0xdb, 0x1d, 0x83, 0xaa, 0x7c, 0x42, 0x5f, 0xda, 0xcf, 0xe8, 0x07,
	0xf4, 0x07, 0xab, 0xb9, 0xf8, 0x96, 0x82, 0x92, 0xf3, 0x84, 0xf7, 0x9e, 0xbd, 0xd7, 0x5a, 0x33,
	0xb3, 0x67, 0x01, 0xf5, 0x88, 0x86, 0xeb, 0x30, 0xfe, 0x21, 0x0a, 0xe9, 0xd2, 0xa7, 0x6d, 0x1e,
	0x21, 0x43, 0x44, 0xf8, 0x13, 0xd4, 0x26, 0x8b, 0xc7, 0x60, 0x16, 0x11, 0xff, 0xf7, 0x8d, 0x1f,
	0xaf, 0x11, 0x02, 0x3d, 0x70, 0x57, 0x7e, 0x43, 0x39, 0x55, 0x5a, 0x07, 0x84, 0x7f, 0xe3, 0x0b,
	0x30, 0x93, 0xa2, 0x38, 0x0a, 0x83, 0xd8, 0x47, 0x26, 0xa8, 0x0b, 0x4f, 0xd6, 0xa8, 0x0b, 0x2f,
	0xed, 0x52, 0x73, 0x5d, 0x3f, 0xc2, 0xe1, 0xf5, 0x93, 0x1b, 0x3c, 0xfa, 0x43, 0x77, 0xe5, 0x27,
	0xf0, 0xef, 0x69, 0x3c, 0x02, 0x94, 0x6f, 0x14, 0x94, 0xf8, 0x44, 0x28, 0xed, 0x07, 0x3b, 0xa0,
	0xf0, 0xa5, 0x50, 0xc9, 0x0a, 0xa4, 0x4a, 0x0b, 0xb4, 0xa5, 0xff, 0x22, 0x4b, 0xd8, 0xe7, 0x56,
	0xba, 0x1a, 0x54, 0x7e, 0x09, 0x17, 0x09, 0x2c, 0xfe, 0x5b, 0x81, 0xaa, 0x88, 0x25, 0xca, 0x47,
	0xd8, 0xa3, 0x61, 0xb8, 0x9a, 0xa7, 0x64, 0x06, 0x0b, 0xfb, 0x1e, 0xfa, 0x0a, 0x0e, 0xf8, 0x42,
	0x0e, 0x71, 0x9f, 0x25, 0x98, 0x6c, 0x74, 0x02, 0x95, 0xe8, 0xd9, 0x7d, 0xf1, 0xe9, 0x7c, 0xbd,
	0xa1, 0x41, 0x43, 0x3b, 0x55, 0x5a, 0x1a, 0x01, 0x91, 0x9a, 0x6e, 0x68, 0x80, 0x5a, 0xb0, 0x27,
	0xa2, 0xb8, 0xa1, 0x9f, 0x6a, 0xad, 0x4a, 0xc7, 0x6c, 0xcb, 0x1b, 0x1a, 0xf3, 0x34, 0x49, 0x96,
	0xf1, 0x19, 0x18, 0x22, 0xc5, 0xe4, 0x73, 0x34, 0x85, 0xa3, 0xf1, 0xef, 0xad, 0x5b, 0xfa, 0x0e,
	0xaa, 0x93, 0xb5, 0x4b, 0xd7, 0xc9, 0x51, 0xed, 0xda, 0x02, 0x7e, 0x82, 0x9a, 0x2c, 0x94, 0x9b,
	0xdd, 0xc6, 0x70, 0x02, 0x95, 0x07, 0x97, 0x7a, 0xf3, 0x60, 0xb3, 0xba, 0xf7, 0x29, 0x27, 0xd2,
	0x08, 0xb0, 0xd4, 0x90, 0x67, 0x10, 0x86, 0x32, 0x8b, 0xe2, 0x86, 0xc6, 0x37, 0x52, 0x4d, 0x36,
	0x72, 0xed, 0x52, 0x8f, 0x88, 0x25, 0xfc, 0x97, 0x02, 0x3a, 0x8b, 0xd1, 0x07, 0x30, 0x24, 0x90,
	0xe0, 0x90, 0x11, 0xfa, 0x06, 0xf4, 0x95, 0x4b, 0x97, 0x1c, 0xde, 0xec, 0x1c, 0xe6, 0x31, 0xda,
	0x77, 0x2e, 0x5d, 0x12, 0xbe, 0x8c, 0x6f, 0x41, 0x67, 0x11, 0xaa, 0xc1, 0xc1, 0x5d, 0x97, 0xfc,
	0x3a, 0xbf, 0x1e, 0xcc, 0xae, 0xac, 0x12, 0xb2, 0xa0, 0xca, 0xc3, 0x5e, 0xbf, 0x7b, 0x37, 0x1a,
	0xf6, 0x2c, 0x05, 0x99, 0x00, 0x3c, 0xe3, 0xd8, 0x5d, 0x32, 0xb5, 0xd4, 0x34, 0x9e, 0x8c, 0xbb,
	0x3d, 0xdb, 0xd2, 0xf0, 0x00, 0x6a, 0x62, 0xca, 0xde, 0x3a, 0xa4, 0x6c, 0x7b, 0xea, 0xee, 0xed,
	0x5d, 0x80, 0x99, 0xa0, 0xc9, 0x93, 0x4c, 0xbb, 0x94, 0xdd, 0x5d, 0x3f, 0x43, 0xa5, 0x47, 0xdd,
	0x3f, 0xde, 0x54, 0x90, 0xdc, 0x8a, 0x9a, 0xdd, 0x0a, 0xee, 0x40, 0x55, 0xf4, 0x7e, 0x06, 0xdf,
	0xb7, 0x50, 0x19, 0x45, 0x7e, 0xf0, 0xe6, 0x58, 0x5c, 0x40, 0x55, 0xd4, 0x49, 0xec, 0xaf, 0x41,
	0x8d, 0xa8, 0x04, 0x3e, 0x7a, 0x35, 0xa6, 0x7e, 0xbc, 0x79, 0x5e, 0x13, 0x35, 0xa2, 0xf8, 0x5f,
	0x15, 0xaa, 0xf9, 0xe4, 0xd6, 0x61, 0x7a, 0xc7, 0x61, 0xa2, 0xef, 0x41, 0x7f, 0x72, 0x03, 0x8f,
	0x3f, 0x1a, 0xb3, 0xf3, 0xe5, 0x36, 0xc2, 0xb6, 0xd3, 0x1d, 0xf6, 0x08, 0x2f, 0x63, 0x34, 0xd4,
	0x0d, 0x96, 0x0d, 0x5d, 0xd0, 0xb0, 0x6f, 0xfc, 0x8f, 0x02, 0x3a, 0x2b, 0x61, 0x73, 0xc2, 0x7e,
	0xe7, 0x4e, 0xff, 0xd6, 0xb1, 0x4a, 0x69, 0x38, 0xee, 0xf6, 0x89, 0xa5, 0xa0, 0x43, 0xa8, 0xf1,
	0x70, 0xfa, 0xdb, 0x48, 0xa4, 0xf8, 0x9c, 0x88, 0x94, 0x43, 0x6c, 0xdb, 0xd2, 0xd2, 0x92, 0xc9,
	0x94, 0x74, 0xfb, 0xb7, 0xce, 0xd4, 0xd2, 0xd3, 0x92, 0x9b, 0xc1, 0x6c, 0xe2, 0x58, 0x65, 0x54,
	0x87, 0x2f, 0x44, 0x3c, 0x1b, 0x0c, 0xe6, 0xce, 0x68, 0x36, 0xb1, 0x2d, 0x23, 0x65, 0xba, 0x19,
	0xcd, 0x88, 0xb5, 0x87, 0x3e, 0x42, 0xbd, 0x00, 0x23, 0x9b, 0xf7, 0xf1, 0x27, 0x00, 0x3b, 0xf0,
	0x92, 0x2b, 0x39, 0x06, 0x63, 0x11, 0xcf, 0xfd, 0x40, 0xdc, 0xc8, 0x3e, 0x29, 0x2f, 0x62, 0x3b,
	0xf0, 0x98, 0x47, 0xf1, 0x22, 0x71, 0x1f, 0x9d, 0x3f, 0x75, 0x30, 0xc6, 0xfc, 0x50, 0xd0, 0x4f,
	0x60, 0x08, 0x6f, 0x46, 0xc7, 0xc9, 0x39, 0x15, 0x0c, 0xbd, 0xf9, 0xe1, 0x75, 0x5a, 0xfa, 0x69,
	0x09, 0xd9, 0x00, 0x99, 0xcf, 0xa2, 0xf4, 0x98, 0xff, 0x67, 0xda, 0xcd, 0xe6, 0xb6, 0xa5, 0x14,
	0x46, 0x2a, 0xe8, 0x07, 0x45, 0x05, 0xa9, 0x51, 0x17, 0x15, 0x64, 0xf6, 0x8c, 0x4b, 0xe8, 0x1c,
	0x74, 0x66, 0xb5, 0xa8, 0x9e, 0x54, 0xe4, 0x8c, 0xb8, 0x79, 0x54, 0x4c, 0xa6, 0x4d, 0x97, 0x50,
	0xe6, 0x9e, 0x85, 0xd2, 0x82, 0xbc, 0xd7, 0x35, 0x8f, 0x5f, 0x65, 0xf3, 0x3a, 0x85, 0xfe, 0x4c,
	0x67, 0xc1, 0x00, 0x32, 0x9d, 0xc5, 0x97, 0x2c, 0x74, 0xb2, 0xf7, 0x90, 0xe9, 0xcc, 0xbd, 0xa2,
	0x4c, 0x67, 0xfe, 0xc9, 0xe0, 0x12, 0x3a, 0x03, 0xcd, 0x66, 0xd3, 0x99, 0x2c, 0x67, 0xb7, 0xdc,
	0xac, 0x17, 0x72, 0x79, 0x1a, 0xf6, 0xa4, 0x33, 0x9a, 0x9c, 0x39, 0x64, 0x34, 0xf9, 0x57, 0x8f,
	0x4b, 0x57, 0x4d, 0x30, 0x17, 0x61, 0xfb, 0x91, 0x46, 0x0f, 0xb2, 0xe0, 0x4a, 0x8e, 0xc6, 0x58,
	0xb9, 0x37, 0xf8, 0x9f, 0xfd, 0xf9, 0x7f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x82, 0x1d, 0x94, 0x35,
	0x03, 0x08, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PorkerClient is the client API for Porker service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PorkerClient interface {
	SignUp(ctx context.Context, in *SignUpRequest, opts ...grpc.CallOption) (*SignUpResponse, error)
	ChangeName(ctx context.Context, in *ChangeNameRequest, opts ...grpc.CallOption) (*ChangeNameResponse, error)
	SignIn(ctx context.Context, in *SignInRequest, opts ...grpc.CallOption) (*SignInResponse, error)
	Join(ctx context.Context, in *JoinRequest, opts ...grpc.CallOption) (*JoinResponse, error)
	Start(ctx context.Context, in *StartRequest, opts ...grpc.CallOption) (*StartResponse, error)
	Change(ctx context.Context, in *ChangeRequest, opts ...grpc.CallOption) (*ChangeResponse, error)
	Open(ctx context.Context, in *OpenRequest, opts ...grpc.CallOption) (*OpenResponse, error)
	End(ctx context.Context, in *EndRequest, opts ...grpc.CallOption) (*EndResponse, error)
	Draw(ctx context.Context, in *DrawRequest, opts ...grpc.CallOption) (*DrawResponse, error)
}

type porkerClient struct {
	cc *grpc.ClientConn
}

func NewPorkerClient(cc *grpc.ClientConn) PorkerClient {
	return &porkerClient{cc}
}

func (c *porkerClient) SignUp(ctx context.Context, in *SignUpRequest, opts ...grpc.CallOption) (*SignUpResponse, error) {
	out := new(SignUpResponse)
	err := c.cc.Invoke(ctx, "/porker.Porker/SignUp", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *porkerClient) ChangeName(ctx context.Context, in *ChangeNameRequest, opts ...grpc.CallOption) (*ChangeNameResponse, error) {
	out := new(ChangeNameResponse)
	err := c.cc.Invoke(ctx, "/porker.Porker/ChangeName", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *porkerClient) SignIn(ctx context.Context, in *SignInRequest, opts ...grpc.CallOption) (*SignInResponse, error) {
	out := new(SignInResponse)
	err := c.cc.Invoke(ctx, "/porker.Porker/SignIn", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *porkerClient) Join(ctx context.Context, in *JoinRequest, opts ...grpc.CallOption) (*JoinResponse, error) {
	out := new(JoinResponse)
	err := c.cc.Invoke(ctx, "/porker.Porker/Join", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *porkerClient) Start(ctx context.Context, in *StartRequest, opts ...grpc.CallOption) (*StartResponse, error) {
	out := new(StartResponse)
	err := c.cc.Invoke(ctx, "/porker.Porker/Start", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *porkerClient) Change(ctx context.Context, in *ChangeRequest, opts ...grpc.CallOption) (*ChangeResponse, error) {
	out := new(ChangeResponse)
	err := c.cc.Invoke(ctx, "/porker.Porker/Change", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *porkerClient) Open(ctx context.Context, in *OpenRequest, opts ...grpc.CallOption) (*OpenResponse, error) {
	out := new(OpenResponse)
	err := c.cc.Invoke(ctx, "/porker.Porker/Open", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *porkerClient) End(ctx context.Context, in *EndRequest, opts ...grpc.CallOption) (*EndResponse, error) {
	out := new(EndResponse)
	err := c.cc.Invoke(ctx, "/porker.Porker/End", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *porkerClient) Draw(ctx context.Context, in *DrawRequest, opts ...grpc.CallOption) (*DrawResponse, error) {
	out := new(DrawResponse)
	err := c.cc.Invoke(ctx, "/porker.Porker/Draw", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PorkerServer is the server API for Porker service.
type PorkerServer interface {
	SignUp(context.Context, *SignUpRequest) (*SignUpResponse, error)
	ChangeName(context.Context, *ChangeNameRequest) (*ChangeNameResponse, error)
	SignIn(context.Context, *SignInRequest) (*SignInResponse, error)
	Join(context.Context, *JoinRequest) (*JoinResponse, error)
	Start(context.Context, *StartRequest) (*StartResponse, error)
	Change(context.Context, *ChangeRequest) (*ChangeResponse, error)
	Open(context.Context, *OpenRequest) (*OpenResponse, error)
	End(context.Context, *EndRequest) (*EndResponse, error)
	Draw(context.Context, *DrawRequest) (*DrawResponse, error)
}

// UnimplementedPorkerServer can be embedded to have forward compatible implementations.
type UnimplementedPorkerServer struct {
}

func (*UnimplementedPorkerServer) SignUp(ctx context.Context, req *SignUpRequest) (*SignUpResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SignUp not implemented")
}
func (*UnimplementedPorkerServer) ChangeName(ctx context.Context, req *ChangeNameRequest) (*ChangeNameResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChangeName not implemented")
}
func (*UnimplementedPorkerServer) SignIn(ctx context.Context, req *SignInRequest) (*SignInResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SignIn not implemented")
}
func (*UnimplementedPorkerServer) Join(ctx context.Context, req *JoinRequest) (*JoinResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Join not implemented")
}
func (*UnimplementedPorkerServer) Start(ctx context.Context, req *StartRequest) (*StartResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Start not implemented")
}
func (*UnimplementedPorkerServer) Change(ctx context.Context, req *ChangeRequest) (*ChangeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Change not implemented")
}
func (*UnimplementedPorkerServer) Open(ctx context.Context, req *OpenRequest) (*OpenResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Open not implemented")
}
func (*UnimplementedPorkerServer) End(ctx context.Context, req *EndRequest) (*EndResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method End not implemented")
}
func (*UnimplementedPorkerServer) Draw(ctx context.Context, req *DrawRequest) (*DrawResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Draw not implemented")
}

func RegisterPorkerServer(s *grpc.Server, srv PorkerServer) {
	s.RegisterService(&_Porker_serviceDesc, srv)
}

func _Porker_SignUp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SignUpRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PorkerServer).SignUp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/porker.Porker/SignUp",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PorkerServer).SignUp(ctx, req.(*SignUpRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Porker_ChangeName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChangeNameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PorkerServer).ChangeName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/porker.Porker/ChangeName",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PorkerServer).ChangeName(ctx, req.(*ChangeNameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Porker_SignIn_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SignInRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PorkerServer).SignIn(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/porker.Porker/SignIn",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PorkerServer).SignIn(ctx, req.(*SignInRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Porker_Join_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(JoinRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PorkerServer).Join(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/porker.Porker/Join",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PorkerServer).Join(ctx, req.(*JoinRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Porker_Start_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StartRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PorkerServer).Start(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/porker.Porker/Start",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PorkerServer).Start(ctx, req.(*StartRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Porker_Change_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChangeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PorkerServer).Change(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/porker.Porker/Change",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PorkerServer).Change(ctx, req.(*ChangeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Porker_Open_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OpenRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PorkerServer).Open(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/porker.Porker/Open",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PorkerServer).Open(ctx, req.(*OpenRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Porker_End_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EndRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PorkerServer).End(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/porker.Porker/End",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PorkerServer).End(ctx, req.(*EndRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Porker_Draw_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DrawRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PorkerServer).Draw(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/porker.Porker/Draw",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PorkerServer).Draw(ctx, req.(*DrawRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Porker_serviceDesc = grpc.ServiceDesc{
	ServiceName: "porker.Porker",
	HandlerType: (*PorkerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SignUp",
			Handler:    _Porker_SignUp_Handler,
		},
		{
			MethodName: "ChangeName",
			Handler:    _Porker_ChangeName_Handler,
		},
		{
			MethodName: "SignIn",
			Handler:    _Porker_SignIn_Handler,
		},
		{
			MethodName: "Join",
			Handler:    _Porker_Join_Handler,
		},
		{
			MethodName: "Start",
			Handler:    _Porker_Start_Handler,
		},
		{
			MethodName: "Change",
			Handler:    _Porker_Change_Handler,
		},
		{
			MethodName: "Open",
			Handler:    _Porker_Open_Handler,
		},
		{
			MethodName: "End",
			Handler:    _Porker_End_Handler,
		},
		{
			MethodName: "Draw",
			Handler:    _Porker_Draw_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "protos/porker.proto",
}
